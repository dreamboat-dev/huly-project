x-defaults: &defaults # default values every container gets
  restart: unless-stopped # always restart, unless the container has been manually stopped
  volumes:
    - /etc/timezone:/etc/timezone:ro # text-based representation of hosts timezone
    - /etc/localtime:/etc/localtime:ro # binary representation of rules used to calculate hosts time relative to unix time

# =============================================================================
# === IMPORTANT
# some hostnames are also specified in "nginx.conf"
# thus if changed here, they must also be changed there
# =============================================================================

services:
  nginx:
    image: "nginx:1.21.3"
    ports:
      - "${NGINX_SERVICE_PORT}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    networks:
      - internal-net
      - public-net

  mongodb:
    image: "mongo:${MONGODB_IMAGE_TAG:?}"
    container_name: ${MONGODB_CONTAINER_NAME:-mongodb} # display name of container
    hostname: ${MONGODB_HOSTNAME:-mongodb} # hostname of container
    environment:
      - PUID=1000
      - PGID=1000
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME:-huly} # username for huly database
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD:?} # password for huly database
    volumes:
      - db:/data/db
      - dbconf:/data/configdb
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    # TODO set log level
    networks:
      - internal-net

  elastic:
    image: "elasticsearch:${ELASTIC_IMAGE_TAG:?}"
    container_name: ${ELASTIC_CONTAINER_NAME:-elastic} # display name of container
    hostname: ${ELASTIC_HOSTNAME:-elastic} # hostname of container
    # check if "ingest-attachment" plugin is installed, if not install it
    # after that, execute this script: https://github.com/elastic/elasticsearch/blob/main/distribution/docker/src/docker/bin/docker-entrypoint.sh
    command: |
      /bin/sh -c "./bin/elasticsearch-plugin list | grep --quiet ingest-attachment ||
                  yes | ./bin/elasticsearch-plugin install --silent ingest-attachment;
                  /usr/local/bin/docker-entrypoint.sh eswrapper"
    volumes:
      - elastic:/usr/share/elasticsearch/data
    environment:
      - ELASTICSEARCH_PORT_NUMBER=${ELASTIC_PORT:-9200} # TODO check if ELASTICSEARCH_PORT_NUMBER is internal or external
      - discovery.type=${ELASTIC_DISCOVERY_TYPE:-single-node} # elasticsearch has only one node; that node will elect itself master nad will not join a cluster
    deploy:
      resources:
        limits:
          memory: ${ELASTIC_MAX_MEMORY:-1G} # max memory the elastic container is allowed to use
    healthcheck:
      # status:
      #   red: share is not allocated
      #   yellow: primary shard is allocated but replicas are not
      #   green. all shards are allocated
      test: ["CMD-SHELL", "curl --silent http://localhost:9200/_cluster/health | grep --quiet '\"status\":\"green\"'"]
      interval: 20s
      retries: 10
      timeout: 10s
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    networks:
      - internal-net

  minio:
    image: "minio/minio:${MINIO_IMAGE_TAG:?}"
    container_name: ${MINIO_CONTAINER_NAME:-minio} # display name of container
    hostname: ${MINIO_HOSTNAME:-minio} # hostname of container
    command: |
      server /data --address ":9000"
                   --console-address ":9001"
    volumes:
      - files:/data
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-huly} # username for minio
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:?} # password for minio
    networks:
      - internal-net

  rekoni:
    image: hardcoreeng/rekoni-service:${HULY_IMAGE_TAG:?}
    container_name: ${REKONI_CONTAINER_NAME:-rekoni} # display name of container
    hostname: ${REKONI_HOSTNAME:-rekoni} # hostname of container
    environment:
      - SECRET=${HULY_SECRET:?} # secret for huly
    deploy:
      resources:
        limits:
          memory: ${REKONI_MAX_MEMORY:-500M}
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    networks:
      - internal-net
      - public-net

  transactor:
    image: hardcoreeng/transactor:${HULY_IMAGE_TAG:?}
    container_name: ${TRANSACTOR_CONTAINER_NAME:-transactor} # display name of container
    hostname: ${TRANSACTOR_HOSTNAME:-transactor} # hostname of container
    environment:
      - SERVER_PORT=${TRANSACTOR_PORT:-3333}
      - SERVER_SECRET=${HULY_SECRET:?} # secret for huly
      - SERVER_CURSOR_MAXTIMEMS=${TRANSACTOR_SERVER_CURSOR_MAXTIMEMS:-30000} # https://www.mongodb.com/docs/manual/reference/method/cursor.maxTimeMS/
      - ELASTIC_URL=${ELASTIC_URL} # link to elastic container
      - ELASTIC_INDEX_NAME=${ELASTIC_INDEX_NAME:-huly_storage_index}
      - MONGO_URL=${MONGODB_URL} # link to mongodb
      - METRICS_CONSOLE=${TRANSACTOR_METRICS_CONSOLE:-false}
      - METRICS_FILE=${TRANSACTOR_METRICS_FILE:-metrics.txt}
      - STORAGE_CONFIG=${STORAGE_CONFIG} # minio config: minio|${HOSTNAME}?accessKey=${USERNAME}&secretKey=${PASSWORD}
      - REKONI_URL=${REKONI_URL:-http://${REKONI_HOSTNAME}:${REKONI_PORT}}
      - FRONT_URL=http://localhost:8087
      - ACCOUNTS_URL=${ACCOUNT_URL:-http://${ACCOUNT_HOSTNAME}:${ACCOUNT_PORT}}
      - LAST_NAME_FIRST=${HULY_CONFIG_LAST_NAME_FIRST:-true}
      - UPLOAD_URL=${UPLOAD_URL:-${NGINX_HTTP_SCHEME}://${SERVER_ADDRESS}/files}
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    networks:
      - internal-net
      - public-net


  collaborator:
    image: hardcoreeng/collaborator:${HULY_IMAGE_TAG:?}
    container_name: ${COLLABORATOR_CONTAINER_NAME:-collaborator}
    hostname: ${COLLABORATOR_HOSTNAME:-collaborator}
    environment:
      - COLLABORATOR_PORT=${COLLABORATOR_PORT:-3078}
      - SECRET=${HULY_SECRET:?} # secret for huly
      - ACCOUNTS_URL=${ACCOUNT_URL:-http://${ACCOUNT_HOSTNAME}:${ACCOUNT_PORT}}
      - MONGO_URL=${MONGODB_URL} # link to mongodb
      - STORAGE_CONFIG=${STORAGE_CONFIG} # minio config: minio|${HOSTNAME}?accessKey=${USERNAME}&secretKey=${PASSWORD}
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    networks:
      - internal-net
      - public-net

  account:
    image: hardcoreeng/account:${HULY_IMAGE_TAG:?}
    container_name: ${ACCOUNT_CONTAINER_NAME:-account}
    hostname: ${ACCOUNT_HOSTNAME:-account}
    environment:
      - SERVER_PORT=${ACCOUNT_PORT:-3000}
      - SERVER_SECRET=${HULY_SECRET:?} # secret for huly
      - MONGO_URL=${MONGODB_URL} # link to mongodb
      - TRANSACTOR_URL=${TRANSACTOR_URL:-ws://transactor:${TRANSACTOR_PORT};${NGINX_WS_SCHEME}://${SERVER_ADDRESS}/_transactor}
      - STORAGE_CONFIG=${STORAGE_CONFIG} # minio config: minio|${HOSTNAME}?accessKey=${USERNAME}&secretKey=${PASSWORD}
      - FRONT_URL=http://front:8080
      - MODEL_ENABLED=*
      - ACCOUNT_PORT=${ACCOUNT_PORT}
      - ACCOUNTS_URL=${ACCOUNT_LOCALHOST_URL:-http://localhost:${ACCOUNT_PORT}}
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    networks:
      - internal-net
      - public-net

  workspace:
    image: hardcoreeng/workspace:${HULY_IMAGE_TAG:?}
    environment:
      - SERVER_SECRET=${HULY_SECRET:?} # secret for huly
      - MONGO_URL=${MONGODB_URL} # link to mongodb
      - TRANSACTOR_URL=${TRANSACTOR_URL:-ws://transactor:${TRANSACTOR_PORT};${NGINX_WS_SCHEME}://${SERVER_ADDRESS}/_transactor}
      - STORAGE_CONFIG=${STORAGE_CONFIG} # minio config: minio|${HOSTNAME}?accessKey=${USERNAME}&secretKey=${PASSWORD}
      - MODEL_ENABLED=*
      - ACCOUNTS_URL=${ACCOUNT_URL:-http://${ACCOUNT_HOSTNAME}:${ACCOUNT_PORT}}
      - NOTIFY_INBOX_ONLY=true
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    networks:
      - internal-net
      - public-net

  front:
    image: hardcoreeng/front:${HULY_IMAGE_TAG:?}
    environment:
      - SERVER_PORT=8080
      - SERVER_SECRET=${HULY_SECRET:?} # secret for huly
      - ACCOUNTS_URL=${NGINX_HTTP_SCHEME}://${SERVER_ADDRESS}/_accounts
      - REKONI_URL=${NGINX_HTTP_SCHEME}://${SERVER_ADDRESS}/_rekoni
      - CALENDAR_URL=${NGINX_HTTP_SCHEME}://${SERVER_ADDRESS}/_calendar
      - GMAIL_URL=${NGINX_HTTP_SCHEME}://${SERVER_ADDRESS}/_gmail
      - TELEGRAM_URL=${NGINX_HTTP_SCHEME}://${SERVER_ADDRESS}/_telegram
      - UPLOAD_URL=/files
      - ELASTIC_URL=${ELASTIC_URL} # link to elastic container
      - COLLABORATOR_URL=${COLLABORATOR_URL:-${NGINX_WS_SCHEME}://${SERVER_ADDRESS}/_collaborator}
      - STORAGE_CONFIG=${STORAGE_CONFIG} # minio config: minio|${HOSTNAME}?accessKey=${USERNAME}&secretKey=${PASSWORD}
      - MONGO_URL=${MONGODB_URL} # link to mongodb
      - TITLE=Huly Self Host
      - DEFAULT_LANGUAGE=en
      - LAST_NAME_FIRST=true
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    networks:
      - internal-net
      - public-net

networks:
  public-net:
    name: public-net
  internal-net:
    name: internal-net

volumes:
  db:
  dbconf:
  elastic:
  files: