x-defaults: &defaults # default values every container gets
  restart: unless-stopped # always restart, unless the container has been manually stopped
  volumes:
    - /etc/timezone:/etc/timezone:ro # text-based representation of hosts timezone
    - /etc/localtime:/etc/localtime:ro # binary representation of rules used to calculate hosts time relative to unix time

services:
  nginx:
    image: "nginx:1.21.3"
    ports:
      - "${NGINX_SERVICE_PORT}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    networks:
      - internal-net
      - public-net

  mongodb:
    image: "mongo:7-jammy"
    container_name: mongodb
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - db:/data/db
      - dbconf:/data/configdb
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    # TODO set log level
    networks:
      - internal-net

  elastic:
    image: "elasticsearch:7.14.2"
    # TODO set log level
    command: |
      /bin/sh -c "./bin/elasticsearch-plugin list | grep -q ingest-attachment || yes | ./bin/elasticsearch-plugin install --silent ingest-attachment;
      /usr/local/bin/docker-entrypoint.sh eswrapper"
    volumes:
      - elastic:/usr/share/elasticsearch/data
    environment:
      - ELASTICSEARCH_PORT_NUMBER=9200
      - BITNAMI_DEBUG=true
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
      - http.cors.enabled=true
      - http.cors.allow-origin=http://localhost:8082
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    networks:
      - internal-net

  minio:
    image: "minio/minio"
    command: server /data --address ":9000" --console-address ":9001"
    volumes:
      - files:/data
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    networks:
      - internal-net

  rekoni:
    image: hardcoreeng/rekoni-service:${HULY_VERSION}
    environment:
      - SECRET=${HULY_SECRET}
    deploy:
      resources:
        limits:
          memory: 500M
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    networks:
      - internal-net
      - public-net

  transactor:
    image: hardcoreeng/transactor:${HULY_VERSION}
    environment:
      - SERVER_PORT=3333
      - SERVER_SECRET=${HULY_SECRET}
      - SERVER_CURSOR_MAXTIMEMS=30000
      - ELASTIC_URL=http://elastic:9200
      - ELASTIC_INDEX_NAME=huly_storage_index
      - MONGO_URL=mongodb://mongodb:27017
      - METRICS_CONSOLE=false
      - METRICS_FILE=metrics.txt
      - STORAGE_CONFIG=${STORAGE_CONFIG}
      - REKONI_URL=http://rekoni:4004
      - FRONT_URL=http://localhost:8087
      - ACCOUNTS_URL=http://account:3000
      - LAST_NAME_FIRST=true
      - UPLOAD_URL=${NGINX_HTTP_SCHEME}://${SERVER_ADDRESS}/files
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    networks:
      - internal-net
      - public-net


  collaborator:
    image: hardcoreeng/collaborator:${HULY_VERSION}
    environment:
      - COLLABORATOR_PORT=3078
      - SECRET=${HULY_SECRET}
      - ACCOUNTS_URL=http://account:3000
      - MONGO_URL=mongodb://mongodb:27017
      - STORAGE_CONFIG=${STORAGE_CONFIG}
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    networks:
      - internal-net
      - public-net

  account:
    image: hardcoreeng/account:${HULY_VERSION}
    environment:
      - SERVER_PORT=3000
      - SERVER_SECRET=${HULY_SECRET}
      - MONGO_URL=mongodb://mongodb:27017
      - TRANSACTOR_URL=ws://transactor:3333;${NGINX_WS_SCHEME}://${SERVER_ADDRESS}/_transactor
      - STORAGE_CONFIG=${STORAGE_CONFIG}
      - FRONT_URL=http://front:8080
      - MODEL_ENABLED=*
      - ACCOUNTS_URL=http://localhost:3000
      - ACCOUNT_PORT=3000
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    networks:
      - internal-net
      - public-net

  workspace:
    image: hardcoreeng/workspace:${HULY_VERSION}
    environment:
      - SERVER_SECRET=${HULY_SECRET}
      - MONGO_URL=mongodb://mongodb:27017
      - TRANSACTOR_URL=ws://transactor:3333;${NGINX_WS_SCHEME}://${SERVER_ADDRESS}/_transactor
      - STORAGE_CONFIG=${STORAGE_CONFIG}
      - MODEL_ENABLED=*
      - ACCOUNTS_URL=http://account:3000
      - NOTIFY_INBOX_ONLY=true
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    networks:
      - internal-net
      - public-net

  front:
    image: hardcoreeng/front:${HULY_VERSION}
    environment:
      - SERVER_PORT=8080
      - SERVER_SECRET=${HULY_SECRET}
      - ACCOUNTS_URL=${NGINX_HTTP_SCHEME}://${SERVER_ADDRESS}/_accounts
      - REKONI_URL=${NGINX_HTTP_SCHEME}://${SERVER_ADDRESS}/_rekoni
      - CALENDAR_URL=${NGINX_HTTP_SCHEME}://${SERVER_ADDRESS}/_calendar
      - GMAIL_URL=${NGINX_HTTP_SCHEME}://${SERVER_ADDRESS}/_gmail
      - TELEGRAM_URL=${NGINX_HTTP_SCHEME}://${SERVER_ADDRESS}/_telegram
      - UPLOAD_URL=/files
      - ELASTIC_URL=http://elastic:9200
      - COLLABORATOR_URL=${NGINX_WS_SCHEME}://${SERVER_ADDRESS}/_collaborator
      - STORAGE_CONFIG=${STORAGE_CONFIG}
      - MONGO_URL=mongodb://mongodb:27017
      - TITLE=Huly Self Host
      - DEFAULT_LANGUAGE=en
      - LAST_NAME_FIRST=true
    <<: [*defaults] # array of anchors ("templates") the container gets
    # using an array so it can be expanded with more anchors
    networks:
      - internal-net
      - public-net

networks:
  public-net:
    name: public-net
  internal-net:
    name: internal-net

volumes:
  db:
  dbconf:
  elastic:
  files: