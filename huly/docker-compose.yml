x-defaults: &defaults 
  restart: ${RESTART_POLICY} 
  env_file:
    - "./.env"
  volumes:
    - /etc/timezone:/etc/timezone:ro 
    - /etc/localtime:/etc/localtime:ro 
  networks:
    - internal-net
  logging:
    driver: ${LOGGING_DRIVER}
    options:
      max-size: ${LOGGING_MAX_SIZE}
      max-file: ${LOGGING_MAX_FILE}

services:
  mongodb:
    image: mongo:${MONGODB_IMAGE_TAG}
    container_name: ${MONGODB_CONTAINER_NAME}
    hostname: ${MONGODB_HOSTNAME}
    <<: [*defaults]
    healthcheck:
      test: [
        "CMD", 
        "mongosh", "--eval", "'(db.runCommand({ ping: 1 }).ok ? 0 : 1)'"
      ]
      
      interval: ${MONGODB_HEALTHCHECK_INTERVAL}
      timeout: ${MONGODB_HEALTHCHECK_TIMEOUT}
      retries: ${MONGODB_HEALTHCHECK_RETRIES}
      start_period: ${MONGODB_HEALTHCHECK_START_PERIOD}
    volumes:
      - ${MONGODB_DB_PATH}:/data/db
      - ${MONGODB_DBCONF_PATH}:/data/configdb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - PUID=${MONGODB_PUID}
      - PGID=${MONGODB_PGID}

  elastic:
    image: elasticsearch:${ELASTIC_IMAGE_TAG}
    container_name: ${ELASTIC_CONTAINER_NAME}
    hostname: ${ELASTIC_HOSTNAME}
    <<: [*defaults]
    healthcheck:
      test: [
        "CMD-SHELL",
        "curl --silent http://localhost:9200/_cluster/health | grep --quiet '\"status\":\"green\"'"
      ]
      interval: ${ELASTIC_HEALTHCHECK_INTERVAL}
      timeout: ${ELASTIC_HEALTHCHECK_TIMEOUT}
      retries: ${ELASTIC_HEALTHCHECK_RETRIES}
      start_period: ${ELASTIC_HEALTHCHECK_START_PERIOD}
    volumes:
      - ${ELASTIC_PATH}:/usr/share/elasticsearch/data
    environment:
      - ELASTICSEARCH_PORT_NUMBER=${ELASTIC_PORT}
      - discovery.type=${ELASTIC_DISCOVERY_TYPE} 
    command: |
      /bin/sh -c "./bin/elasticsearch-plugin list | grep --quiet ingest-attachment ||
                  yes | ./bin/elasticsearch-plugin install --silent ingest-attachment;
                  /usr/local/bin/docker-entrypoint.sh eswrapper"

  minio:
    image: "minio/minio:${MINIO_IMAGE_TAG}"
    container_name: ${MINIO_CONTAINER_NAME} 
    hostname: ${MINIO_HOSTNAME} 
    <<: [*defaults]
    healthcheck:
      test: [
        "CMD", 
        "curl --user ${MINIO_ROOT_USER}:${MINIO_ROOT_PASSWORD} http://localhost:9000/minio/health/live"
      ]
      interval: ${MINIO_HEALTHCHECK_INTERVAL}
      timeout: ${MINIO_HEALTHCHECK_TIMEOUT}
      retries: ${MINIO_HEALTHCHECK_RETRIES}
      start_period: ${MINIO_HEALTHCHECK_START_PERIOD}
    volumes:
      - ${MINIO_PATH}:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER} 
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD} 
    command: |
      server /data --address ":9000"
                   --console-address ":9001"

  rekoni:
    image: hardcoreeng/rekoni-service:${HULY_IMAGE_TAG}
    container_name: ${REKONI_CONTAINER_NAME} 
    hostname: ${REKONI_HOSTNAME} 
    <<: [*defaults] 
    
    environment:
      - SECRET=${HULY_SECRET} 
    networks:
      - internal-net
      - public-net

  transactor:
    image: hardcoreeng/transactor:${HULY_IMAGE_TAG}
    container_name: ${TRANSACTOR_CONTAINER_NAME} 
    hostname: ${TRANSACTOR_HOSTNAME} 
    <<: [*defaults]
    environment:
      - SERVER_PORT=${TRANSACTOR_PORT}
      - SERVER_SECRET=${HULY_SECRET} 
      - SERVER_CURSOR_MAXTIMEMS=${TRANSACTOR_SERVER_CURSOR_MAXTIMEMS} 
      - ELASTIC_URL=${ELASTIC_URL} 
      - ELASTIC_INDEX_NAME=${ELASTIC_INDEX_NAME}
      - MONGO_URL=${MONGODB_URL} 
      - METRICS_CONSOLE=${TRANSACTOR_METRICS_CONSOLE}
      - METRICS_FILE=${TRANSACTOR_METRICS_FILE}
      - STORAGE_CONFIG=${STORAGE_CONFIG}
      - REKONI_URL=${REKONI_URL}
      - FRONT_URL=${FRONT_URL} 
      - ACCOUNTS_URL=${ACCOUNT_URL} 
      - LAST_NAME_FIRST=${HULY_CONFIG_LAST_NAME_FIRST} 
      - UPLOAD_URL=${UPLOAD_URL} 
    networks:
      - internal-net
      - public-net

  collaborator:
    image: hardcoreeng/collaborator:${HULY_IMAGE_TAG}
    container_name: ${COLLABORATOR_CONTAINER_NAME}
    hostname: ${COLLABORATOR_HOSTNAME}
    <<: [*defaults]
    environment:
      - COLLABORATOR_PORT=${COLLABORATOR_PORT} 
      - SECRET=${HULY_SECRET} 
      - ACCOUNTS_URL=${ACCOUNT_URL} 
      - MONGO_URL=${MONGODB_URL} 
      - STORAGE_CONFIG=${STORAGE_CONFIG}
    networks:
      - internal-net
      - public-net

  account:
    image: hardcoreeng/account:${HULY_IMAGE_TAG}
    container_name: ${ACCOUNT_CONTAINER_NAME}
    hostname: ${ACCOUNT_HOSTNAME}
    <<: [*defaults]
    environment:
      - SERVER_PORT=${ACCOUNT_PORT}
      - SERVER_SECRET=${HULY_SECRET}
      - MONGO_URL=${MONGODB_URL}
      - TRANSACTOR_URL=${TRANSACTOR_URL}
      - STORAGE_CONFIG=${STORAGE_CONFIG}
      - FRONT_URL=${FRONT_URL}
      - MODEL_ENABLED=*
      - ACCOUNT_PORT=${ACCOUNT_PORT}
      - ACCOUNTS_URL=${ACCOUNT_URL}
    networks:
      - internal-net
      - public-net

  workspace:
    image: hardcoreeng/workspace:${HULY_IMAGE_TAG}
    container_name: ${WORKSPACE_CONTAINER_NAME}
    hostname: ${WORKSPACE_HOSTNAME}
    <<: [*defaults]
    environment:
      - SERVER_SECRET=${HULY_SECRET} 
      - MONGO_URL=${MONGODB_URL} 
      - TRANSACTOR_URL=${TRANSACTOR_URL}
      - STORAGE_CONFIG=${STORAGE_CONFIG}
      - MODEL_ENABLED=*
      - ACCOUNTS_URL=${ACCOUNT_URL} 
      - NOTIFY_INBOX_ONLY=true 
    networks:
      - internal-net
      - public-net

  front:
    image: hardcoreeng/front:${HULY_IMAGE_TAG}
    container_name: ${FRONT_CONTAINER_NAME}
    hostname: ${FRONT_HOSTNAME}
    <<: [*defaults]
    environment:
      - SERVER_PORT=${FRONT_PORT}
      - SERVER_SECRET=${HULY_SECRET} 
      - ACCOUNTS_URL=${PUBLIC_ACCOUNTS_URL} 
      - REKONI_URL=${PUBLIC_REKONI_URL}
      - CALENDAR_URL=${PUBLIC_CALENDAR_URL}
      - GMAIL_URL=${PUBLIC_GMAIL_URL}
      - TELEGRAM_URL=${PUBLIC_TELEGRAM_URL}
      - COLLABORATOR_URL=${PUBLIC_COLLABORATOR_URL}
      - UPLOAD_URL=/files 
      - ELASTIC_URL=${ELASTIC_URL} 
      - STORAGE_CONFIG=${STORAGE_CONFIG}
      - MONGO_URL=${MONGODB_URL} 
      - TITLE=Huly Self Host 
      - DEFAULT_LANGUAGE=en 
      - LAST_NAME_FIRST=true 
    networks:
      - internal-net
      - public-net



  huly-nginx:
    image: nginx:${NGINX_IMAGE_TAG}
    container_name: ${NGINX_CONTAINER_NAME} 
    hostname: ${NGINX_HOSTNAME} 
    <<: [*defaults]
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost" ] 
      interval: ${NGINX_HEALTHCHECK_INTERVAL}
      timeout: ${NGINX_HEALTHCHECK_TIMEOUT}
      retries: ${NGINX_HEALTHCHECK_RETRIES}
      start_period: ${NGINX_HEALTHCHECK_START_PERIOD}
    volumes:
      - ${NGINX_CONFIG}:/etc/nginx/conf.d/default.conf:ro 
    ports:
      - ${NGINX_PORT}:80 
    networks:
      - internal-net
      - public-net

networks:
  public-net:
    name: public-net
  internal-net:
    name: internal-net